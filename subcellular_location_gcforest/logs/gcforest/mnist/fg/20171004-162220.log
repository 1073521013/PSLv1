[ 2017-10-04 16:22:22,479][train_fg.<module>] tools.train_fg
[ 2017-10-04 16:22:22,479][train_fg.<module>] 
{
    "dataset":{
        "test":{
            "data_set":"test",
            "layout_x":"tensor",
            "type":"mnist"
        },
        "train":{
            "data_set":"train",
            "layout_x":"tensor",
            "type":"mnist"
        }
    },
    "net":{
        "layers":[
            {
                "bottoms":[
                    "X",
                    "y"
                ],
                "estimators":[
                    {
                        "max_depth":100,
                        "min_samples_leaf":10,
                        "n_estimators":500,
                        "n_folds":3,
                        "n_jobs":-1,
                        "type":"ExtraTreesClassifier"
                    },
                    {
                        "max_depth":100,
                        "min_samples_leaf":10,
                        "n_estimators":500,
                        "n_folds":3,
                        "n_jobs":-1,
                        "type":"RandomForestClassifier"
                    }
                ],
                "n_classes":10,
                "name":"win1/7x7",
                "stride_x":2,
                "stride_y":2,
                "tops":[
                    "win1/7x7/ets",
                    "win1/7x7/rf"
                ],
                "type":"FGWinLayer",
                "win_x":7,
                "win_y":7
            },
            {
                "bottoms":[
                    "X",
                    "y"
                ],
                "estimators":[
                    {
                        "max_depth":100,
                        "min_samples_leaf":10,
                        "n_estimators":500,
                        "n_folds":3,
                        "n_jobs":-1,
                        "type":"ExtraTreesClassifier"
                    },
                    {
                        "max_depth":100,
                        "min_samples_leaf":10,
                        "n_estimators":500,
                        "n_folds":3,
                        "n_jobs":-1,
                        "type":"RandomForestClassifier"
                    }
                ],
                "n_classes":10,
                "name":"win1/10x10",
                "stride_x":2,
                "stride_y":2,
                "tops":[
                    "win1/10x10/ets",
                    "win1/10x10/rf"
                ],
                "type":"FGWinLayer",
                "win_x":10,
                "win_y":10
            },
            {
                "bottoms":[
                    "X",
                    "y"
                ],
                "estimators":[
                    {
                        "max_depth":100,
                        "min_samples_leaf":10,
                        "n_estimators":500,
                        "n_folds":3,
                        "n_jobs":-1,
                        "type":"ExtraTreesClassifier"
                    },
                    {
                        "max_depth":100,
                        "min_samples_leaf":10,
                        "n_estimators":500,
                        "n_folds":3,
                        "n_jobs":-1,
                        "type":"RandomForestClassifier"
                    }
                ],
                "n_classes":10,
                "name":"win1/13x13",
                "stride_x":2,
                "stride_y":2,
                "tops":[
                    "win1/13x13/ets",
                    "win1/13x13/rf"
                ],
                "type":"FGWinLayer",
                "win_x":13,
                "win_y":13
            },
            {
                "bottoms":[
                    "win1/7x7/ets",
                    "win1/7x7/rf",
                    "win1/10x10/ets",
                    "win1/10x10/rf",
                    "win1/13x13/ets",
                    "win1/13x13/rf"
                ],
                "name":"pool1",
                "pool_method":"avg",
                "tops":[
                    "pool1/7x7/ets",
                    "pool1/7x7/rf",
                    "pool1/10x10/ets",
                    "pool1/10x10/rf",
                    "pool1/13x13/ets",
                    "pool1/13x13/rf"
                ],
                "type":"FGPoolLayer",
                "win_x":2,
                "win_y":2
            }
        ],
        "outputs":[
            "pool1/7x7/ets",
            "pool1/7x7/rf",
            "pool1/10x10/ets",
            "pool1/10x10/rf",
            "pool1/13x13/ets",
            "pool1/13x13/rf"
        ]
    },
    "train":{
        "data_cache":{
            "cache_dir":"/home/guest_majian/python/gcForest_official/gcforest/mnist/fg-tree500-depth100-3folds/datas",
            "cache_in_disk":{
                "default":1
            },
            "keep_in_mem":{
                "default":0
            }
        },
        "keep_model_in_mem":0,
        "random_state":0
    }
}
[ 2017-10-04 16:22:22,534][fgnet.fit_transform] X_train.shape=(56000, 1, 28, 28), y_train.shape=(56000,), X_test.shape=(14000, 1, 28, 28), y_test.shape=(14000,)
[ 2017-10-04 16:22:22,534][fg_win_layer.fit_transform] [data][win1/7x7], bottoms=[u'X', u'y'], tops=[u'win1/7x7/ets', u'win1/7x7/rf']
[ 2017-10-04 16:22:22,535][fg_win_layer.fit_transform] [progress][win1/7x7] ti=0/2, top_name=win1/7x7/ets
[ 2017-10-04 16:22:22,535][base_layer.check_top_cache] [data][win1/7x7,train] top cache exists. tops[0].shape=(11231, 10, 1, 1)
[ 2017-10-04 16:22:22,536][base_layer.check_top_cache] [data][win1/7x7,test] top cache exists. tops[0].shape=(2773, 10, 1, 1)
[ 2017-10-04 16:22:22,536][fg_win_layer.fit_transform] [data][win1/7x7] all top cache exists. skip progress
[ 2017-10-04 16:22:22,536][fg_win_layer.fit_transform] [progress][win1/7x7] ti=1/2, top_name=win1/7x7/rf
[ 2017-10-04 16:22:22,537][base_layer.check_top_cache] [data][win1/7x7,train] top cache exists. tops[1].shape=(11231, 10, 1, 1)
[ 2017-10-04 16:22:22,537][base_layer.check_top_cache] [data][win1/7x7,test] top cache exists. tops[1].shape=(2773, 10, 1, 1)
[ 2017-10-04 16:22:22,537][fg_win_layer.fit_transform] [data][win1/7x7] all top cache exists. skip progress
[ 2017-10-04 16:22:22,537][fg_win_layer.fit_transform] [data][win1/10x10], bottoms=[u'X', u'y'], tops=[u'win1/10x10/ets', u'win1/10x10/rf']
[ 2017-10-04 16:22:22,537][fg_win_layer.fit_transform] [progress][win1/10x10] ti=0/2, top_name=win1/10x10/ets
[ 2017-10-04 16:22:22,538][fg_win_layer.fit_transform] [data][win1/10x10,train] bottoms.shape=56000x1x28x28,56000
[ 2017-10-04 16:22:22,553][win_utils.get_windows] get_windows_start: X.shape=(56000, 1, 28, 28), X_win.shape=(100, 5600000), nw=10, nh=10, c=1, win_x=10, win_y=10, stride_x=2, stride_y=2
[ 2017-10-04 16:22:23,083][win_utils.get_windows] get_windows_end
[ 2017-10-04 16:22:23,119][fg_win_layer.fit_transform] [data][win1/10x10,test] bottoms.shape=14000x1x28x28,14000
[ 2017-10-04 16:22:23,125][win_utils.get_windows] get_windows_start: X.shape=(14000, 1, 28, 28), X_win.shape=(100, 1400000), nw=10, nh=10, c=1, win_x=10, win_y=10, stride_x=2, stride_y=2
[ 2017-10-04 16:22:23,234][win_utils.get_windows] get_windows_end
[ 2017-10-04 16:22:24,789][base_estimator.fit] X_train.shape=(3733000, 100), y_train.shape=(3733000,)
