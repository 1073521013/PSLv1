[ 2017-10-05 09:41:39,314][train_fg.<module>] tools.train_fg
[ 2017-10-05 09:41:39,315][train_fg.<module>] 
{
    "dataset":{
        "test":{
            "data_set":"test",
            "layout_x":"tensor",
            "type":"mnist"
        },
        "train":{
            "data_set":"train",
            "layout_x":"tensor",
            "type":"mnist"
        }
    },
    "net":{
        "layers":[
            {
                "bottoms":[
                    "X",
                    "y"
                ],
                "estimators":[
                    {
                        "max_depth":100,
                        "min_samples_leaf":10,
                        "n_estimators":500,
                        "n_folds":3,
                        "n_jobs":-1,
                        "type":"ExtraTreesClassifier"
                    },
                    {
                        "max_depth":100,
                        "min_samples_leaf":10,
                        "n_estimators":500,
                        "n_folds":3,
                        "n_jobs":-1,
                        "type":"RandomForestClassifier"
                    }
                ],
                "n_classes":10,
                "name":"win1/7x7",
                "stride_x":2,
                "stride_y":2,
                "tops":[
                    "win1/7x7/ets",
                    "win1/7x7/rf"
                ],
                "type":"FGWinLayer",
                "win_x":4,
                "win_y":4
            },
            {
                "bottoms":[
                    "X",
                    "y"
                ],
                "estimators":[
                    {
                        "max_depth":100,
                        "min_samples_leaf":10,
                        "n_estimators":500,
                        "n_folds":3,
                        "n_jobs":-1,
                        "type":"ExtraTreesClassifier"
                    },
                    {
                        "max_depth":100,
                        "min_samples_leaf":10,
                        "n_estimators":500,
                        "n_folds":3,
                        "n_jobs":-1,
                        "type":"RandomForestClassifier"
                    }
                ],
                "n_classes":10,
                "name":"win1/10x10",
                "stride_x":2,
                "stride_y":2,
                "tops":[
                    "win1/10x10/ets",
                    "win1/10x10/rf"
                ],
                "type":"FGWinLayer",
                "win_x":8,
                "win_y":8
            },
            {
                "bottoms":[
                    "X",
                    "y"
                ],
                "estimators":[
                    {
                        "max_depth":100,
                        "min_samples_leaf":10,
                        "n_estimators":500,
                        "n_folds":3,
                        "n_jobs":-1,
                        "type":"ExtraTreesClassifier"
                    },
                    {
                        "max_depth":100,
                        "min_samples_leaf":10,
                        "n_estimators":500,
                        "n_folds":3,
                        "n_jobs":-1,
                        "type":"RandomForestClassifier"
                    }
                ],
                "n_classes":10,
                "name":"win1/13x13",
                "stride_x":2,
                "stride_y":2,
                "tops":[
                    "win1/13x13/ets",
                    "win1/13x13/rf"
                ],
                "type":"FGWinLayer",
                "win_x":18,
                "win_y":18
            },
            {
                "bottoms":[
                    "win1/7x7/ets",
                    "win1/7x7/rf",
                    "win1/10x10/ets",
                    "win1/10x10/rf",
                    "win1/13x13/ets",
                    "win1/13x13/rf"
                ],
                "name":"pool1",
                "pool_method":"avg",
                "tops":[
                    "pool1/7x7/ets",
                    "pool1/7x7/rf",
                    "pool1/10x10/ets",
                    "pool1/10x10/rf",
                    "pool1/13x13/ets",
                    "pool1/13x13/rf"
                ],
                "type":"FGPoolLayer",
                "win_x":2,
                "win_y":2
            }
        ],
        "outputs":[
            "pool1/7x7/ets",
            "pool1/7x7/rf",
            "pool1/10x10/ets",
            "pool1/10x10/rf",
            "pool1/13x13/ets",
            "pool1/13x13/rf"
        ]
    },
    "train":{
        "data_cache":{
            "cache_dir":"/home/guest_majian/python/gcForest_official/gcforest/mnist/fg-tree500-depth100-3folds/datas",
            "cache_in_disk":{
                "default":1
            },
            "keep_in_mem":{
                "default":0
            }
        },
        "keep_model_in_mem":0,
        "random_state":0
    }
}
[ 2017-10-05 09:41:40,261][fgnet.fit_transform] X_train.shape=(11231, 1, 8, 8), y_train.shape=(11231,), X_test.shape=(2773, 1, 8, 8), y_test.shape=(2773,)
[ 2017-10-05 09:41:40,261][fg_win_layer.fit_transform] [data][win1/7x7], bottoms=[u'X', u'y'], tops=[u'win1/7x7/ets', u'win1/7x7/rf']
[ 2017-10-05 09:41:40,261][fg_win_layer.fit_transform] [progress][win1/7x7] ti=0/2, top_name=win1/7x7/ets
[ 2017-10-05 09:41:40,262][base_layer.check_top_cache] [data][win1/7x7,train] top cache exists. tops[0].shape=(11231, 10, 1, 1)
[ 2017-10-05 09:41:40,262][base_layer.check_top_cache] [data][win1/7x7,test] top cache exists. tops[0].shape=(2773, 10, 1, 1)
[ 2017-10-05 09:41:40,262][fg_win_layer.fit_transform] [data][win1/7x7] all top cache exists. skip progress
[ 2017-10-05 09:41:40,262][fg_win_layer.fit_transform] [progress][win1/7x7] ti=1/2, top_name=win1/7x7/rf
[ 2017-10-05 09:41:40,263][base_layer.check_top_cache] [data][win1/7x7,train] top cache exists. tops[1].shape=(11231, 10, 1, 1)
[ 2017-10-05 09:41:40,263][base_layer.check_top_cache] [data][win1/7x7,test] top cache exists. tops[1].shape=(2773, 10, 1, 1)
[ 2017-10-05 09:41:40,263][fg_win_layer.fit_transform] [data][win1/7x7] all top cache exists. skip progress
[ 2017-10-05 09:41:40,264][fg_win_layer.fit_transform] [data][win1/10x10], bottoms=[u'X', u'y'], tops=[u'win1/10x10/ets', u'win1/10x10/rf']
[ 2017-10-05 09:41:40,264][fg_win_layer.fit_transform] [progress][win1/10x10] ti=0/2, top_name=win1/10x10/ets
[ 2017-10-05 09:41:40,264][fg_win_layer.fit_transform] [data][win1/10x10,train] bottoms.shape=11231x1x8x8,11231
[ 2017-10-05 09:41:40,265][win_utils.get_windows] get_windows_start: X.shape=(11231, 1, 8, 8), X_win.shape=(64, 11231), nw=1, nh=1, c=1, win_x=8, win_y=8, stride_x=2, stride_y=2
[ 2017-10-05 09:41:40,408][win_utils.get_windows] get_windows_end
[ 2017-10-05 09:41:40,408][fg_win_layer.fit_transform] [data][win1/10x10,test] bottoms.shape=2773x1x8x8,2773
[ 2017-10-05 09:41:40,409][win_utils.get_windows] get_windows_start: X.shape=(2773, 1, 8, 8), X_win.shape=(64, 2773), nw=1, nh=1, c=1, win_x=8, win_y=8, stride_x=2, stride_y=2
[ 2017-10-05 09:41:40,547][win_utils.get_windows] get_windows_end
[ 2017-10-05 09:41:40,563][base_estimator.fit] X_train.shape=(7483, 64), y_train.shape=(7483,)
[ 2017-10-05 09:41:42,391][base_estimator.predict_proba] X.shape=(3748, 64)
[ 2017-10-05 09:41:42,725][base_estimator.predict_proba] y_proba.shape=(3748, 10)
[ 2017-10-05 09:41:42,725][kfold_wrapper.log_eval_metrics] Accuracy(win1/10x10/ets/3_folds.train_0.predict)=57.39%
[ 2017-10-05 09:41:42,739][kfold_wrapper.log_eval_metrics] Accuracy(win1/10x10/ets/3_folds.train_0.vote)=57.39%
[ 2017-10-05 09:41:42,739][kfold_wrapper.log_eval_metrics] Accuracy(win1/10x10/ets/3_folds.train_0.avg)=57.39%
[ 2017-10-05 09:41:42,740][base_estimator.predict_proba] X.shape=(2773, 64)
[ 2017-10-05 09:41:43,078][base_estimator.predict_proba] y_proba.shape=(2773, 10)
[ 2017-10-05 09:41:43,083][base_estimator.fit] X_train.shape=(7486, 64), y_train.shape=(7486,)
[ 2017-10-05 09:41:44,948][base_estimator.predict_proba] X.shape=(3745, 64)
[ 2017-10-05 09:41:45,277][base_estimator.predict_proba] y_proba.shape=(3745, 10)
[ 2017-10-05 09:41:45,278][kfold_wrapper.log_eval_metrics] Accuracy(win1/10x10/ets/3_folds.train_1.predict)=57.01%
[ 2017-10-05 09:41:45,292][kfold_wrapper.log_eval_metrics] Accuracy(win1/10x10/ets/3_folds.train_1.vote)=57.01%
[ 2017-10-05 09:41:45,292][kfold_wrapper.log_eval_metrics] Accuracy(win1/10x10/ets/3_folds.train_1.avg)=57.01%
[ 2017-10-05 09:41:45,293][base_estimator.predict_proba] X.shape=(2773, 64)
[ 2017-10-05 09:41:45,633][base_estimator.predict_proba] y_proba.shape=(2773, 10)
[ 2017-10-05 09:41:45,638][base_estimator.fit] X_train.shape=(7493, 64), y_train.shape=(7493,)
[ 2017-10-05 09:41:47,486][base_estimator.predict_proba] X.shape=(3738, 64)
[ 2017-10-05 09:41:47,841][base_estimator.predict_proba] y_proba.shape=(3738, 10)
[ 2017-10-05 09:41:47,842][kfold_wrapper.log_eval_metrics] Accuracy(win1/10x10/ets/3_folds.train_2.predict)=57.92%
[ 2017-10-05 09:41:47,855][kfold_wrapper.log_eval_metrics] Accuracy(win1/10x10/ets/3_folds.train_2.vote)=57.92%
[ 2017-10-05 09:41:47,856][kfold_wrapper.log_eval_metrics] Accuracy(win1/10x10/ets/3_folds.train_2.avg)=57.92%
[ 2017-10-05 09:41:47,856][base_estimator.predict_proba] X.shape=(2773, 64)
[ 2017-10-05 09:41:48,184][base_estimator.predict_proba] y_proba.shape=(2773, 10)
[ 2017-10-05 09:41:48,184][kfold_wrapper.log_eval_metrics] Accuracy(win1/10x10/ets/3_folds.train.predict)=57.44%
[ 2017-10-05 09:41:48,224][kfold_wrapper.log_eval_metrics] Accuracy(win1/10x10/ets/3_folds.train.vote)=57.44%
[ 2017-10-05 09:41:48,225][kfold_wrapper.log_eval_metrics] Accuracy(win1/10x10/ets/3_folds.train.avg)=57.44%
[ 2017-10-05 09:41:48,225][kfold_wrapper.log_eval_metrics] Accuracy(win1/10x10/ets/3_folds.test.predict)=51.57%
[ 2017-10-05 09:41:48,235][kfold_wrapper.log_eval_metrics] Accuracy(win1/10x10/ets/3_folds.test.vote)=51.57%
[ 2017-10-05 09:41:48,235][kfold_wrapper.log_eval_metrics] Accuracy(win1/10x10/ets/3_folds.test.avg)=51.57%
[ 2017-10-05 09:41:48,239][fg_win_layer.fit_transform] [data][win1/10x10,train] tops[0].shape=(11231, 10, 1, 1)
[ 2017-10-05 09:41:48,239][data_cache.update] Updating data (train->win1/10x10/ets, shape=(11231, 10, 1, 1)) in disk: /home/guest_majian/python/gcForest_official/gcforest/mnist/fg-tree500-depth100-3folds/datas/train/win1-10x10-ets.npy
[ 2017-10-05 09:41:48,240][fg_win_layer.fit_transform] [data][win1/10x10,test] tops[0].shape=(2773, 10, 1, 1)
[ 2017-10-05 09:41:48,240][data_cache.update] Updating data (test->win1/10x10/ets, shape=(2773, 10, 1, 1)) in disk: /home/guest_majian/python/gcForest_official/gcforest/mnist/fg-tree500-depth100-3folds/datas/test/win1-10x10-ets.npy
[ 2017-10-05 09:41:48,240][fg_win_layer.fit_transform] [progress][win1/10x10] ti=1/2, top_name=win1/10x10/rf
[ 2017-10-05 09:41:48,248][base_estimator.fit] X_train.shape=(7483, 64), y_train.shape=(7483,)
[ 2017-10-05 09:41:50,659][base_estimator.predict_proba] X.shape=(3748, 64)
[ 2017-10-05 09:41:50,989][base_estimator.predict_proba] y_proba.shape=(3748, 10)
[ 2017-10-05 09:41:50,989][kfold_wrapper.log_eval_metrics] Accuracy(win1/10x10/rf/3_folds.train_0.predict)=57.42%
[ 2017-10-05 09:41:51,003][kfold_wrapper.log_eval_metrics] Accuracy(win1/10x10/rf/3_folds.train_0.vote)=57.42%
[ 2017-10-05 09:41:51,003][kfold_wrapper.log_eval_metrics] Accuracy(win1/10x10/rf/3_folds.train_0.avg)=57.42%
[ 2017-10-05 09:41:51,004][base_estimator.predict_proba] X.shape=(2773, 64)
[ 2017-10-05 09:41:51,213][base_estimator.predict_proba] y_proba.shape=(2773, 10)
[ 2017-10-05 09:41:51,218][base_estimator.fit] X_train.shape=(7486, 64), y_train.shape=(7486,)
[ 2017-10-05 09:41:53,631][base_estimator.predict_proba] X.shape=(3745, 64)
[ 2017-10-05 09:41:53,966][base_estimator.predict_proba] y_proba.shape=(3745, 10)
[ 2017-10-05 09:41:53,967][kfold_wrapper.log_eval_metrics] Accuracy(win1/10x10/rf/3_folds.train_1.predict)=59.81%
[ 2017-10-05 09:41:53,980][kfold_wrapper.log_eval_metrics] Accuracy(win1/10x10/rf/3_folds.train_1.vote)=59.81%
[ 2017-10-05 09:41:53,980][kfold_wrapper.log_eval_metrics] Accuracy(win1/10x10/rf/3_folds.train_1.avg)=59.81%
[ 2017-10-05 09:41:53,981][base_estimator.predict_proba] X.shape=(2773, 64)
[ 2017-10-05 09:41:54,313][base_estimator.predict_proba] y_proba.shape=(2773, 10)
[ 2017-10-05 09:41:54,318][base_estimator.fit] X_train.shape=(7493, 64), y_train.shape=(7493,)
[ 2017-10-05 09:41:56,827][base_estimator.predict_proba] X.shape=(3738, 64)
[ 2017-10-05 09:41:57,160][base_estimator.predict_proba] y_proba.shape=(3738, 10)
[ 2017-10-05 09:41:57,160][kfold_wrapper.log_eval_metrics] Accuracy(win1/10x10/rf/3_folds.train_2.predict)=58.40%
[ 2017-10-05 09:41:57,173][kfold_wrapper.log_eval_metrics] Accuracy(win1/10x10/rf/3_folds.train_2.vote)=58.40%
[ 2017-10-05 09:41:57,174][kfold_wrapper.log_eval_metrics] Accuracy(win1/10x10/rf/3_folds.train_2.avg)=58.40%
[ 2017-10-05 09:41:57,174][base_estimator.predict_proba] X.shape=(2773, 64)
[ 2017-10-05 09:41:57,384][base_estimator.predict_proba] y_proba.shape=(2773, 10)
[ 2017-10-05 09:41:57,385][kfold_wrapper.log_eval_metrics] Accuracy(win1/10x10/rf/3_folds.train.predict)=58.54%
[ 2017-10-05 09:41:57,425][kfold_wrapper.log_eval_metrics] Accuracy(win1/10x10/rf/3_folds.train.vote)=58.54%
[ 2017-10-05 09:41:57,426][kfold_wrapper.log_eval_metrics] Accuracy(win1/10x10/rf/3_folds.train.avg)=58.54%
[ 2017-10-05 09:41:57,426][kfold_wrapper.log_eval_metrics] Accuracy(win1/10x10/rf/3_folds.test.predict)=54.13%
[ 2017-10-05 09:41:57,436][kfold_wrapper.log_eval_metrics] Accuracy(win1/10x10/rf/3_folds.test.vote)=54.13%
[ 2017-10-05 09:41:57,436][kfold_wrapper.log_eval_metrics] Accuracy(win1/10x10/rf/3_folds.test.avg)=54.13%
[ 2017-10-05 09:41:57,440][fg_win_layer.fit_transform] [data][win1/10x10,train] tops[1].shape=(11231, 10, 1, 1)
[ 2017-10-05 09:41:57,440][data_cache.update] Updating data (train->win1/10x10/rf, shape=(11231, 10, 1, 1)) in disk: /home/guest_majian/python/gcForest_official/gcforest/mnist/fg-tree500-depth100-3folds/datas/train/win1-10x10-rf.npy
[ 2017-10-05 09:41:57,441][fg_win_layer.fit_transform] [data][win1/10x10,test] tops[1].shape=(2773, 10, 1, 1)
[ 2017-10-05 09:41:57,441][data_cache.update] Updating data (test->win1/10x10/rf, shape=(2773, 10, 1, 1)) in disk: /home/guest_majian/python/gcForest_official/gcforest/mnist/fg-tree500-depth100-3folds/datas/test/win1-10x10-rf.npy
[ 2017-10-05 09:41:57,442][fg_win_layer.fit_transform] [data][win1/13x13], bottoms=[u'X', u'y'], tops=[u'win1/13x13/ets', u'win1/13x13/rf']
[ 2017-10-05 09:41:57,442][fg_win_layer.fit_transform] [progress][win1/13x13] ti=0/2, top_name=win1/13x13/ets
[ 2017-10-05 09:41:57,442][fg_win_layer.fit_transform] [data][win1/13x13,train] bottoms.shape=11231x1x8x8,11231
[ 2017-10-05 09:41:57,444][win_utils.get_windows] get_windows_start: X.shape=(11231, 1, 8, 8), X_win.shape=(324, 179696), nw=-4, nh=-4, c=1, win_x=18, win_y=18, stride_x=2, stride_y=2
